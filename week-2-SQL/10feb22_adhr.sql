### 10Feb2022
AGENDA:
1. PL/SQL
--###########################################################################
Section 1. Getting started with PL/SQL
--###########################################################################
LANGUAGE
0. KEYWORDS 
1. DATA TYPES 
2. VARIABLES, TYPE OF VARIABLE(CONST,VARYING VALUES),SCOPE(GLOBAL/LOCAL)
3. OPERATORS ARITHMATIC,ASSIGNMENT,CONDITIONAL,LOGICAL
4. CONDITIONAL STATEMENT IFELSE, CASE WHEN THEN
5. LOOPING STATEMENT 
(INFINITE)DO-WHILE (EXIT ,AT LEAST ONCE),(ENTRY-CONTROL)WHILE ,FOR(FIX)
6. REUSABLE-> FUNCTIONS, PROCEDURE 
7. OOP
====================================================
ALGORITHM
 WRITE A ALOGORITHM ADD TWO NUMBER: 
 STEP 1: DECLARE TWO VARIABLES NUM1,NUM2 WITH DEFAULT VALUE 0
 STEP 2: DECLARE ONE VARIABLE RESULT WITH DEFAULT VALUE 0
 STEP 3: RESULT=NUM1+NUM2
 STEP 4: DIPSLAY THE RESULT
 
--PL/SQL Anonymous Block
--Anonymous BLOCK WITHOUT NAME
--NAMED BLOCKS ->CALL AGAIN AND AGAIN PROCEDURES OR FUNCTIONS
--BLOCK BEGIN ... END;
--SPACE BEFORE THE BEGIN KEYWORD WE CAN USE IT FOR DECLARATIONS OF VARIABLES 
--    
--    BEGIN
--    
--    --    INSTRUCTIONS TO BE EXECUTED 
--    --    ANYTHING GOES WRONG YOU WILL RAISE ERROR/EXCEPTION
--    --    IF EXCEPTIONS OCCURED WE NEED TO HANDLE THE EXCEPTIONS  
--        
--    END;
--###########################################################################
-- HELLO WORLD TO BE PRINTED BY ANONYMOUS BLOCK
SET SERVEROUTPUT ON;
BEGIN
    DBMS_OUTPUT.put_line ('Hello World!');
END;

DECLARE
  l_message VARCHAR2( 255 ) := 'Hello World!';
BEGIN
  DBMS_OUTPUT.PUT_LINE( l_message );
END;

DECLARE
      v_result NUMBER;
BEGIN
   v_result := 1 / 0;
   EXCEPTION
      WHEN ZERO_DIVIDE THEN
         DBMS_OUTPUT.PUT_LINE( SQLERRM );
END;


